exit
exit
exit
StaticPagesContoroller
StaticPagesController
exit
User.new
user = User.new(name: "Takao Hanada", email: "hanada@hanada.com")
user.valid?
user.save
user
user.name
user.email
user.created_at
Uawe.create(name: "A Nother", email: "another@example.org")
User.create(name: "A Nother", email: "another@example.org")
foo + User.create(name: "Foo", email: "foo@bar.com")
user.all
User.all
foo = User.create(name: "Foo", email: "foo@bar.com")
User.all
foo.destroy
User.all
foo
user.name.class
user.email.class
created_at.class
user.created.at
user.created_at.class
user.updated_at.class
User.find(1)
Userfind(3)
User.find(3)
Uer.find_by(email: "hanada@hanada.com")
User.find_by(email: "hanada@hanada.com")
find_by_name
user.find_by(name: "Takao Hanada\
  ")
User.all.class
User.all.length
user
user.email
user.email = hana@hanada.com
user.email = "hana@hanada.com"
user.save
user.updated_at
user.created_at
user.update(name: "Hanada Takao", email: "hanahana@hanada.com")
user.email
u = User.new
u[:name] = "Hanada"
user
User.all
u
u[:email] = "hanahana@hana.com"
u
user.update(:created_At,1.year.ago)
user.update_attribute(:created_At,1.year.ago)
user.update(:created_at,1.year.ago)
user.update_attribute(:created_at,1.year.ago)
u.valid?
u.save
User.all
exit
User.all
user = User.new(name: "", email: "email@emai.com")
user.valid?
user.errors.full_messages
user.save
exit
u = User.new
u.valid?
u.errors.messages
u.errors.messages[:email]
u.errors.messages[:email][:name]
u.errors.messages[:email],[:name]
exit
u = User.new(name: "a"*51, email: "b"*256 )
u.valid?
u.errors.messages
u.errors.full.messages
u.errors.full_messages
%w[foo bar baz]
addresses = %w[USER@foo.COM THE_US-ER@foo.bar.org first.last@foo.jp]
addresses.each do |address|\
  puts address\
end
exit
user = User.create(name: "Example User", email: "user@example.com")
user.email.upcase
duplicate_user = user.dup
duplicate_user.email = user.email.upcase
duplicate_user.valid?
exit
